from beet.contrib.vanilla import Vanilla


vanilla = ctx.inject(Vanilla)
vanilla_recipes = vanilla.releases[ctx.minecraft_version].data.recipes
for name, recipe in vanilla_recipes.items():
    if not name.endswith("stairs") and not name.endswith("slab"):
        continue

    # Skip some very very werd recipes
    if type(recipe.data["key"]["#"]) != dict:
        continue

    if name.endswith("stairs"):
        recipe f"2re:undo/stairs/{name[10:]}" {
            "type": "minecraft:crafting_shaped",
            "category": "building",
            "group": "undo_stairs",
            "key": {
                "#": f"{recipe.data['result']['id']}"
            },
            "pattern": [
                "##",
                "##"
            ],
            "result": {
                "id": f"{recipe.data['key']['#']['item']}",
                "count": 3
            }
        }

    if name.endswith("slab"):
        recipe f"2re:undo/slabs/{name[10:]}" {
            "type": "minecraft:crafting_shaped",
            "category": "building",
            "group": "undo_slab",
            "key": {
                "#": f"{recipe.data['result']['id']}"
            },
            "pattern": [
                "##"
            ],
            "result": {
                "id": f"{recipe.data['key']['#']['item']}",
                "count": 1
            }
        }
